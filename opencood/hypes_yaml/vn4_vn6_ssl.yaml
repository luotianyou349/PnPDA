name: vn4_vn6_ssl
root_dir: 'dataset/train'
validate_dir: 'dataset/validate'
model_dir: 'model/'

yaml_parser: "load_vn_vn_params"
train_params:
  batch_size: &batch_size 1
  epoches: 60
  eval_freq: 10
  save_freq: 1
  max_cav: &max_cav 5

fusion:
  core_method: 'IntermediateFusionDatasetV3' # LateFusionDataset, EarlyFusionDataset, IntermediateFusionDataset supported
  args: 
    same_data: false
    full_data: true
    flip_data: false
    is_augment: false
    
# preprocess-related
preprocess_q:
  # options: BasePreprocessor, VoxelPreprocessor, BevPreprocessor
  core_method: 'SpVoxelPreprocessor'
  args:
    voxel_size: &voxel_size_q [0.4, 0.4, 0.4]
    max_points_per_voxel: &T 32
    max_voxel_train: 36000
    max_voxel_test: 70000
  # lidar range for each individual cav.
  cav_lidar_range: &cav_lidar [-140.8, -40, -3, 140.8, 40, 1]
  
# preprocess-related
preprocess_k:
  # options: BasePreprocessor, VoxelPreprocessor, BevPreprocessor
  core_method: 'SpVoxelPreprocessor'
  args:
    voxel_size: &voxel_size_k [0.6, 0.6, 0.4]
    max_points_per_voxel: &Tk 16
    max_voxel_train: 36000
    max_voxel_test: 70000
  # lidar range for each individual cav.
  cav_lidar_range: &cav_lidar_k [-153.6, -38.4, -3, 153.6, 38.4, 1]

data_augment:
  - NAME: random_world_flip
    ALONG_AXIS_LIST: [ 'x' ]

  - NAME: random_world_rotation
    WORLD_ROT_ANGLE: [ -0.78539816, 0.78539816 ]

  - NAME: random_world_scaling
    WORLD_SCALE_RANGE: [ 0.95, 1.05 ]

# anchor box related
postprocess:
  core_method: 'VoxelPostprocessor' # VoxelPostprocessor, BevPostprocessor supported
  anchor_args:
    cav_lidar_range: *cav_lidar
    l: 3.9
    w: 1.6
    h: 1.56
    r: [0, 90]
    feature_stride: 2
    num: &achor_num 2
  target_args:
    pos_threshold: 0.6
    neg_threshold: 0.45
    score_threshold: 0.20
  voxel_size: *voxel_size_q
  cav_lidar_range: *cav_lidar
  order: 'hwl' # hwl or lwh
  max_num: 100 # maximum number of objects in a single frame. use this number to make sure different frames has the same dimension in the same batch
  nms_thresh: 0.15

# model related
model:
  core_method: ssl
  args:
    encoder_q:
      core_method: voxel_net_encoder
      saved_pth: opencood/pre_train_modules/voxel_net_xyres4.pth
      args:
        N: *batch_size
        T: *T
        voxel_size: *voxel_size_q
        lidar_range: *cav_lidar
        anchor_number: *achor_num
        max_cav: *max_cav
        channel: &c_q 128
        featrue_size: &s_q [100,352]

        pillar_vfe:
          use_norm: true
          with_distance: false
          use_absolute_xyz: true
          num_filters: [64]

        point_pillar_scatter:
          num_features: 64
    
    shrink_header: 
      kernal_size: [ 3 ]
      stride: [ 2 ]
      padding: [ 1 ]
      dim: [ *c_q ]
      input_dim: *c_q 

    encoder_k:
      core_method: voxel_net_encoder
      saved_pth: opencood/pre_train_modules/voxel_net_xyres6.pth
      args:
        N: *batch_size
        T: *Tk
        voxel_size: *voxel_size_k
        lidar_range: *cav_lidar
        anchor_number: *achor_num
        max_cav: *max_cav
        channel: &c_k 128
        featrue_size: &s_k [192,768]

        pillar_vfe:
          use_norm: true
          with_distance: false
          use_absolute_xyz: true
          num_filters: [64]
          
        point_pillar_scatter:
          num_features: 64
      
    compressor:
      in_channel: *c_k
      in_size: *s_k
      featrue_size: *s_q
      channel: *c_q
    
    projector:
      num_layers: 1
      num_heads: 16
      d_ff: 512
      d_model: *c_q
      dropout: 0.1

    predictor:
      num_layers: 1
      num_heads: 16
      d_model: *c_q
      d_ff: 256
      
    anchor_num: *achor_num
    momentum: 0.8

loss:
  core_method: contrastive_learning_loss
  args:
    tau: 0.1
    max_voxel: 30

optimizer:
  core_method: Adam
  lr: 0.001
  args:
    eps: 1e-10
    weight_decay: 1e-4

lr_scheduler:
  core_method: multistep #step, multistep and Exponential support
  gamma: 0.1
  step_size: [10, 50, 80]

